# -*- coding: utf-8 -*-
"""ПЗ1_Анализ_игровых_метрик_и_процессов.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1oueHO3uzbiYK_U-f3MBuflxs4gPJWuRo

# Домашнее задание.
## Урок 1 -  Инсталлы. Стартовая воронка.
### Выполнил работу: Даниил Липунов

## Задание
+ Проанализируйте динамику количества ежедневных инсталлов в игре для органики и неорганики. Какие особенности изменений этих показателей вы видите?  Сгенерируйте гипотезы, почему могут наблюдаться такие изменения (которые затем в ходе выполнения дальнейших заданий вы сможете проверить).
+ Есть ли отличия этого показателя для разных регионов (СНГ, Европа, Азия, Северная Америка + Канада, Южная Америка)? Сделайте оценку в каких регионах более качественное удержание на начальном этапе (можно оценить, например, по второй сессии и проценту игроков, запустивших игру повторно).
"""

from sqlalchemy import create_engine
import pandas as pd
import plotly.express as px

"""## Задание 1
+ Проанализируйте динамику количества ежедневных инсталлов в игре для органики и неорганики. Какие особенности изменений этих показателей вы видите?  Сгенерируйте гипотезы, почему могут наблюдаться такие изменения (которые затем в ходе выполнения дальнейших заданий вы сможете проверить).
"""

HOST = '37.139.42.145'
DBNAME = 'game-analytics'
USER = 'analytics'
PASSWORD = 'BRtTaqYiJyr29WXN'
TABLE_SCHEMA = 'data_viz_1068'
TABLE_NAME = 'project_dataset'
engine = create_engine(f'postgresql://{USER}:{PASSWORD}@{HOST}/{DBNAME}')
engine

df_no_org = pd.read_sql(f'''
        SELECT event_date, user_type, count(distinct user_id) as install
        FROM {TABLE_SCHEMA}.{TABLE_NAME}
        WHERE 1=1
        AND event_name = 'FirstLaunchApp'
        AND user_type = 'non_organic'   
        GROUP BY event_date, user_type
  
    UNION ALL 

        SELECT event_date, user_type, count(distinct user_id) as install
        FROM {TABLE_SCHEMA}.{TABLE_NAME}
        WHERE 1=1
        AND event_name = 'FirstLaunchApp'
        AND user_type = 'organic'   
        GROUP BY event_date, user_type
    ORDER BY event_date
''', con=engine)
df_no_org

df_io = pd.read_sql(f'''
        SELECT event_date, user_type, count(distinct user_id) as install
        FROM {TABLE_SCHEMA}.{TABLE_NAME}
        WHERE 1=1
        AND event_name = 'FirstLaunchApp'
        AND user_type = 'non_organic'
        AND platform = 'ios'     
        GROUP BY event_date, user_type
  
    UNION ALL 

        SELECT event_date, user_type, count(distinct user_id) as install
        FROM {TABLE_SCHEMA}.{TABLE_NAME}
        WHERE 1=1
        AND event_name = 'FirstLaunchApp'
        AND user_type = 'organic'
        AND platform = 'ios'   
        GROUP BY event_date, user_type
    ORDER BY event_date
''', con=engine)

df_andr = pd.read_sql(f'''
        SELECT event_date, user_type, count(distinct user_id) as install
        FROM {TABLE_SCHEMA}.{TABLE_NAME}
        WHERE 1=1
        AND event_name = 'FirstLaunchApp'
        AND user_type = 'non_organic'
        AND platform = 'android'     
        GROUP BY event_date, user_type
  
    UNION ALL 

        SELECT event_date, user_type, count(distinct user_id) as install
        FROM {TABLE_SCHEMA}.{TABLE_NAME}
        WHERE 1=1
        AND event_name = 'FirstLaunchApp'
        AND user_type = 'organic'
        AND platform = 'android'   
        GROUP BY event_date, user_type
    ORDER BY event_date
''', con=engine)

graf_io = px.bar(df_io, x = 'event_date', y = 'install', color = 'user_type', title = 'Установки на IOS')
graf_io

graf_an = px.bar(df_andr, x = 'event_date', y = 'install', color = 'user_type', title = 'Установки на android')
graf_an

graf = px.bar(df_no_org, x = 'event_date', y = 'install', color = 'user_type', title = 'Установки')
graf

"""Гипотезы:
1. В самом начале, а именно в ноябре 2020 года, наблюдался повышенный приход non_organic пользователей, скорее всего из-за активной рекламы в этот период. Больше всего non_oraganic привлекло пользователей IOS.
2. Со второй половины ноября 2020 года, количество organic пользователей начало преобладать над non_organic, предположительно начал действовать эффект сарафанного радио или автоматическая система рекомендаций в сторах на основе интересах пользователей.
3. В конце марта 2021 года резкий всплеска установок organic пользователей android, возможно связанное с расположением игры на титульном экране стора.
4. Версия для android вышла позже, чем версия на IOS.

## Задание 2
+ Есть ли отличия этого показателя для разных регионов (СНГ, Европа, Азия, Северная Америка + Канада, Южная Америка)? Сделайте оценку в каких регионах более качественное удержание на начальном этапе (можно оценить, например, по второй сессии и проценту игроков, запустивших игру повторно).
"""

data_sec = pd.read_sql(f'''
        SELECT *
        FROM (
          SELECT event_time, region, user_id, event_name,
            DENSE_RANK () OVER (PARTITION BY user_id ORDER BY event_time) as dr
          FROM {TABLE_SCHEMA}.{TABLE_NAME}) as t
        WHERE dr=1 OR dr=2
''', con=engine)
data_sec

first_session = data_sec[data_sec['dr'] == 1]
first_session = (first_session.groupby('region', as_index=False)['user_id'].nunique().rename(columns={'user_id' : '1st_session'}))
first_session

second_session = data_sec[data_sec['dr'] == 2]
second_session = (second_session.groupby('region', as_index=False)['user_id'].nunique().rename(columns={'user_id' : '2st_session'}))
second_session

session = first_session.merge(
   second_session,
   on = 'region',
   how = 'inner'
   )
session['precent_second_session'] = (session['2st_session'] / session['1st_session']) * 100
session = session.sort_values('precent_second_session', ascending=True)
session

fig_bar = px.bar(
    session,
    x = 'region',
    y = 'precent_second_session',
    color = 'region',
    title = '% второго запуска по регионам'
)
fig_bar.show()

"""По качеству удержания аудитории лучше всех себя показывает южная и северная Африка, но количество пользователей очень мало. Из группы, где играют больше людей лучше всего показал себя северно-Американский регион, хуже Европейский."""